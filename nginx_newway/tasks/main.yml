---
- name: Check whether you are using a supported NGINX distribution
  ansible.builtin.assert:
    that: (nginx_type == "opensource" and ansible_facts['distribution'] in nginx_distributions)
    success_msg: Your OS, {{ ansible_facts['distribution'] }} is supported by NGINX open source
    fail_msg: Your OS, {{ ansible_facts['distribution'] }} is not supported by NGINX open source
  when:
    - nginx_enable | bool
    - (nginx_install_from == "nginx_repository")
  ignore_errors: true

- name: Check that NGINX setup is an allowed value
  ansible.builtin.assert:
    that: nginx_setup in nginx_setup_vars
    success_msg: The value {{ nginx_setup }} you used for `nginx_setup` is allowed.
    fail_msg: The value {{ nginx_setup }} you used for `nginx_setup` is not allowed. Try one of {{ nginx_setup_vars | join(', ') }}.
  when: nginx_enable | bool
  ignore_errors: true 

- name: Set up prerequisites
  include_tasks: "install_dependencies.yml"
  when: nginx_state != "absent"

#Import an official nginx signing key so apt could verify the packages authenticity. Fetch the key
- name: Set up signing keys
  include_tasks: "setup-keys.yml"
  when: (nginx_enable | bool and nginx_install_from == "nginx_repository")
        
- name: "{{ nginx_setup }} NGINX"
  when: nginx_enable | bool
  block:
    - name: "{{ nginx_setup }} NGINX Open Source"
      include_tasks: "install-oss.yml"
      when: nginx_type == "opensource"

- name: (Debian/Ubuntu) {{ nginx_setup }} NGINX
  ansible.builtin.apt:
    name: nginx{{ nginx_version | default('') }}
    state: "{{ nginx_state }}"
    update_cache: true
    allow_downgrade: "{{ omit if ansible_version.full is version('2.12', '<') else true }}"
  ignore_errors: "{{ ansible_check_mode }}"
  notify: (Handler) Run NGINX
      